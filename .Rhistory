library(dplyr)
library(stats)
?filter
0.
?rgamma
roxygen2::roxygenize()
?importFrom()
?namespace_roclet
roxygen2::roxygenize()
roxygen2::roxygenize()
?qpdf
??qpdf
roxygen2::roxygenize()
roxygen2::roxygenize()
Sys.which(Sys.getenv("R_QPDF", "qpdf"))
Sys.getenv("PATH")
Sys.getenv("PATH")
getwd()
devtools::use_travis()
?devtools::build_vignettes()
library(devtools)
?build_vignettes
?rmarkdown::html_vignette
?devtools::build_vignettes()
?devtools::build_vignettes()
getwd()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
devtools::build_vignettes()
?install.packages
devtools::build()
devtools::build()
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/make_anglers.R', echo=TRUE)
anglers <- make_anglers()
library(dplyr)
anglers <- make_anglers()
anglers
class(anglers)
names(anglers)
library(ggplot2)
# Histogram overlaid with kernel density curve
anglers %>%
ggplot(aes(x=tripLength)) +
geom_histogram(aes(y=..density..), # Histogram with density instead of count on y-axis
binwidth=.1,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
anglers %>%
ggplot(aes(x=trip_length)) +
geom_histogram(aes(y=..density..), # Histogram with density instead of count on y-axis
binwidth=.1,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
anglers %>%
ggplot(aes(x=trip_length)) +
geom_histogram(aes(y=..density..), # Histogram with density instead of count on y-axis
binwidth=.1,
colour="black", fill="white") +
geom_density(alpha=.2, fill="#FF6666")  # Overlay with transparent density plot
anglers %>%
get_total_values(startTime = 0, waitTime = 8, samplingProb = 8/12, meanCatchRate = 2.5)
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/get_total_values.R', echo=TRUE)
anglers %>%
get_total_values(startTime = 0, waitTime = 8, samplingProb = 8/12, meanCatchRate = 2.5)
?get_total_values()
anglers %>%
get_total_values(start_time = 0, wait_time = 8, sampling_prob = 8/12, mean_catch_rate = 2.5)
devtools::build()
devtools::build()
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/conduct_multiple_surveys.R', echo=TRUE)
sim <- conduct_multiple_surveys(n_sims = 20, start_time = 0, wait_time = 8, n_sites = 1,
n_anglers = 100, sampling_prob = 8/12,
mean_catch_rate = 2.5, fishing_day_length = 12)
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/simulate_bus_route.R', echo=TRUE)
sim <- conduct_multiple_surveys(n_sims = 20, start_time = 0, wait_time = 8, n_sites = 1,
n_anglers = 100, sampling_prob = 8/12,
mean_catch_rate = 2.5, fishing_day_length = 12)
sim
sim <-
sim %>%
mutate(est_catch = Ehat * catch_rate_ROM)
sim %>%
ggplot(aes(x = true_catch, y = est_catch)) +
geom_abline(intercept = mod$coefficients[1], slope = mod$coefficients[2],
colour = "red", size = 1.01)
sim <- simulate_bus_route(start_time = 0, wait_time = 8, n_sites = 1, n_anglers = 100,
sampling_prob = 8/12, mean_catch_rate = 2.5, fishing_day_length = 12)
sim
devtools::build()
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/conduct_multiple_surveys.R', echo=TRUE)
sim <- conduct_multiple_surveys(n_sims = 20, start_time = 0, wait_time = 8, n_sites = 1,
n_anglers = 100, sampling_prob = 8/12,
mean_catch_rate = 2.5, fishing_day_length = 12)
sim
devtools::build()
n_sims <- 2
bus_route <- as.data.frame(matrix(data = NA, ncol = 5, nrow = n_sims, byrow=T))
names(bus_route) <- c("Ehat", "catch_rate_ROM", "true_catch", "true_effort", "mean_lambda")
class(bus_route)
roxygen2::roxygenize()
version
devtools::run_examples()
?dontrun
devtools::build()
devtools::build()
devtools::build()
devtools::check()
roxygen2::roxygenize()
roxygen2::roxygenize()
source('C:/Users/Steven Harris Ranney/repositories/AnglerCreelSurveySimulation/R/conduct_multiple_surveys.R', echo=TRUE)
